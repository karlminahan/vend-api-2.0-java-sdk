/*
 * API 2.0
 * Early release of version 2.0 of the Vend API.
 *
 * OpenAPI spec version: 2.0
 * Contact: api@vendhq.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.vendhq.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vendhq.models.LineItemTaxComponent;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * LineItem
 */

public class LineItem {
  @JsonProperty("tax_id")
  private String taxId = null;

  @JsonProperty("discount_total")
  private Double discountTotal = null;

  @JsonProperty("is_return")
  private Boolean isReturn = null;

  @JsonProperty("cost")
  private Double cost = null;

  @JsonProperty("cost_total")
  private Double costTotal = null;

  @JsonProperty("price_total")
  private Double priceTotal = null;

  @JsonProperty("tax")
  private Double tax = null;

  @JsonProperty("tax_total")
  private Double taxTotal = null;

  @JsonProperty("product_id")
  private String productId = null;

  @JsonProperty("quantity")
  private Double quantity = null;

  @JsonProperty("price")
  private Double price = null;

  @JsonProperty("tax_components")
  private List<LineItemTaxComponent> taxComponents = null;

  @JsonProperty("discount")
  private Double discount = null;

  @JsonProperty("loyalty_value")
  private Double loyaltyValue = null;

  @JsonProperty("price_set")
  private Boolean priceSet = null;

  @JsonProperty("sequence")
  private Double sequence = null;

  @JsonProperty("note")
  private String note = null;

  @JsonProperty("status")
  private String status = null;

  public LineItem taxId(String taxId) {
    this.taxId = taxId;
    return this;
  }

   /**
   * ???
   * @return taxId
  **/
  @ApiModelProperty(value = "???")
  public String getTaxId() {
    return taxId;
  }

  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }

  public LineItem discountTotal(Double discountTotal) {
    this.discountTotal = discountTotal;
    return this;
  }

   /**
   * Total discount for the line item.
   * @return discountTotal
  **/
  @ApiModelProperty(value = "Total discount for the line item.")
  public Double getDiscountTotal() {
    return discountTotal;
  }

  public void setDiscountTotal(Double discountTotal) {
    this.discountTotal = discountTotal;
  }

  public LineItem isReturn(Boolean isReturn) {
    this.isReturn = isReturn;
    return this;
  }

   /**
   * Indicates whether this line item is a return from another sale (referenced by &#x60;return_for&#x60; on the main sale object).
   * @return isReturn
  **/
  @ApiModelProperty(value = "Indicates whether this line item is a return from another sale (referenced by `return_for` on the main sale object).")
  public Boolean isIsReturn() {
    return isReturn;
  }

  public void setIsReturn(Boolean isReturn) {
    this.isReturn = isReturn;
  }

  public LineItem cost(Double cost) {
    this.cost = cost;
    return this;
  }

   /**
   * Unit cost for the line item.
   * @return cost
  **/
  @ApiModelProperty(value = "Unit cost for the line item.")
  public Double getCost() {
    return cost;
  }

  public void setCost(Double cost) {
    this.cost = cost;
  }

  public LineItem costTotal(Double costTotal) {
    this.costTotal = costTotal;
    return this;
  }

   /**
   * Total cost for the line item.
   * @return costTotal
  **/
  @ApiModelProperty(value = "Total cost for the line item.")
  public Double getCostTotal() {
    return costTotal;
  }

  public void setCostTotal(Double costTotal) {
    this.costTotal = costTotal;
  }

  public LineItem priceTotal(Double priceTotal) {
    this.priceTotal = priceTotal;
    return this;
  }

   /**
   * Total price for the line item.
   * @return priceTotal
  **/
  @ApiModelProperty(value = "Total price for the line item.")
  public Double getPriceTotal() {
    return priceTotal;
  }

  public void setPriceTotal(Double priceTotal) {
    this.priceTotal = priceTotal;
  }

  public LineItem tax(Double tax) {
    this.tax = tax;
    return this;
  }

   /**
   * Unit tax for the line item. **deprecated** ???
   * @return tax
  **/
  @ApiModelProperty(value = "Unit tax for the line item. **deprecated** ???")
  public Double getTax() {
    return tax;
  }

  public void setTax(Double tax) {
    this.tax = tax;
  }

  public LineItem taxTotal(Double taxTotal) {
    this.taxTotal = taxTotal;
    return this;
  }

   /**
   * Total tax value.
   * @return taxTotal
  **/
  @ApiModelProperty(value = "Total tax value.")
  public Double getTaxTotal() {
    return taxTotal;
  }

  public void setTaxTotal(Double taxTotal) {
    this.taxTotal = taxTotal;
  }

  public LineItem productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Valid product ID.
   * @return productId
  **/
  @ApiModelProperty(value = "Valid product ID.")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public LineItem quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Quantity of product units included in the sale.
   * @return quantity
  **/
  @ApiModelProperty(value = "Quantity of product units included in the sale.")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public LineItem price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Unit price for the product.
   * @return price
  **/
  @ApiModelProperty(value = "Unit price for the product.")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }

  public LineItem taxComponents(List<LineItemTaxComponent> taxComponents) {
    this.taxComponents = taxComponents;
    return this;
  }

  public LineItem addTaxComponentsItem(LineItemTaxComponent taxComponentsItem) {
    if (this.taxComponents == null) {
      this.taxComponents = new ArrayList<LineItemTaxComponent>();
    }
    this.taxComponents.add(taxComponentsItem);
    return this;
  }

   /**
   * Collection of tax components associated with the line item.
   * @return taxComponents
  **/
  @ApiModelProperty(value = "Collection of tax components associated with the line item.")
  public List<LineItemTaxComponent> getTaxComponents() {
    return taxComponents;
  }

  public void setTaxComponents(List<LineItemTaxComponent> taxComponents) {
    this.taxComponents = taxComponents;
  }

  public LineItem discount(Double discount) {
    this.discount = discount;
    return this;
  }

   /**
   * Discount. ??? Unit? Should that be even posted?
   * @return discount
  **/
  @ApiModelProperty(value = "Discount. ??? Unit? Should that be even posted?")
  public Double getDiscount() {
    return discount;
  }

  public void setDiscount(Double discount) {
    this.discount = discount;
  }

  public LineItem loyaltyValue(Double loyaltyValue) {
    this.loyaltyValue = loyaltyValue;
    return this;
  }

   /**
   * The value that should be added to associated customer&#39;s loyalty balance.
   * @return loyaltyValue
  **/
  @ApiModelProperty(value = "The value that should be added to associated customer's loyalty balance.")
  public Double getLoyaltyValue() {
    return loyaltyValue;
  }

  public void setLoyaltyValue(Double loyaltyValue) {
    this.loyaltyValue = loyaltyValue;
  }

  public LineItem priceSet(Boolean priceSet) {
    this.priceSet = priceSet;
    return this;
  }

   /**
   * Indicates whether the price was set manually. Using &#x60;true&#x60; means that the value will never be refreshed from the price book when reloaded (sale retrieved from parked sales).
   * @return priceSet
  **/
  @ApiModelProperty(value = "Indicates whether the price was set manually. Using `true` means that the value will never be refreshed from the price book when reloaded (sale retrieved from parked sales).")
  public Boolean isPriceSet() {
    return priceSet;
  }

  public void setPriceSet(Boolean priceSet) {
    this.priceSet = priceSet;
  }

  public LineItem sequence(Double sequence) {
    this.sequence = sequence;
    return this;
  }

   /**
   * Order of the line item in the sale.
   * @return sequence
  **/
  @ApiModelProperty(value = "Order of the line item in the sale.")
  public Double getSequence() {
    return sequence;
  }

  public void setSequence(Double sequence) {
    this.sequence = sequence;
  }

  public LineItem note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Line item note.
   * @return note
  **/
  @ApiModelProperty(value = "Line item note.")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public LineItem status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Line item status. ???
   * @return status
  **/
  @ApiModelProperty(value = "Line item status. ???")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LineItem lineItem = (LineItem) o;
    return Objects.equals(this.taxId, lineItem.taxId) &&
        Objects.equals(this.discountTotal, lineItem.discountTotal) &&
        Objects.equals(this.isReturn, lineItem.isReturn) &&
        Objects.equals(this.cost, lineItem.cost) &&
        Objects.equals(this.costTotal, lineItem.costTotal) &&
        Objects.equals(this.priceTotal, lineItem.priceTotal) &&
        Objects.equals(this.tax, lineItem.tax) &&
        Objects.equals(this.taxTotal, lineItem.taxTotal) &&
        Objects.equals(this.productId, lineItem.productId) &&
        Objects.equals(this.quantity, lineItem.quantity) &&
        Objects.equals(this.price, lineItem.price) &&
        Objects.equals(this.taxComponents, lineItem.taxComponents) &&
        Objects.equals(this.discount, lineItem.discount) &&
        Objects.equals(this.loyaltyValue, lineItem.loyaltyValue) &&
        Objects.equals(this.priceSet, lineItem.priceSet) &&
        Objects.equals(this.sequence, lineItem.sequence) &&
        Objects.equals(this.note, lineItem.note) &&
        Objects.equals(this.status, lineItem.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taxId, discountTotal, isReturn, cost, costTotal, priceTotal, tax, taxTotal, productId, quantity, price, taxComponents, discount, loyaltyValue, priceSet, sequence, note, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LineItem {\n");
    
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("    discountTotal: ").append(toIndentedString(discountTotal)).append("\n");
    sb.append("    isReturn: ").append(toIndentedString(isReturn)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    costTotal: ").append(toIndentedString(costTotal)).append("\n");
    sb.append("    priceTotal: ").append(toIndentedString(priceTotal)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    taxTotal: ").append(toIndentedString(taxTotal)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    taxComponents: ").append(toIndentedString(taxComponents)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    loyaltyValue: ").append(toIndentedString(loyaltyValue)).append("\n");
    sb.append("    priceSet: ").append(toIndentedString(priceSet)).append("\n");
    sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

