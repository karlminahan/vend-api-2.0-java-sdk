/*
 * API 2.0
 * Early release of version 2.0 of the Vend API.
 *
 * OpenAPI spec version: 2.0
 * Contact: api@vendhq.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.vendhq.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * VariantOption
 */

public class VariantOption {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("value")
  private String value = null;

  public VariantOption name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The Variant Option name.
   * @return name
  **/
  @ApiModelProperty(value = "The Variant Option name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public VariantOption value(String value) {
    this.value = value;
    return this;
  }

   /**
   * The value of a Variant Option.
   * @return value
  **/
  @ApiModelProperty(value = "The value of a Variant Option.")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VariantOption variantOption = (VariantOption) o;
    return Objects.equals(this.name, variantOption.name) &&
        Objects.equals(this.value, variantOption.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VariantOption {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

