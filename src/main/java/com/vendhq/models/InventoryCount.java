/*
 * API 2.0
 * Early release of version 2.0 of the Vend API.
 *
 * OpenAPI spec version: 2.0
 * Contact: api@vendhq.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.vendhq.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.vendhq.models.InventoryCountFilter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * InventoryCount
 */

public class InventoryCount {
  @JsonProperty("outlet_id")
  private UUID outletId = null;

  @JsonProperty("due_at")
  private String dueAt = null;

  @JsonProperty("show_inactive")
  private Boolean showInactive = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("status")
  private String status = null;

  @JsonProperty("filters")
  private List<InventoryCountFilter> filters = null;

  @JsonProperty("type")
  private String type = null;

  public InventoryCount outletId(UUID outletId) {
    this.outletId = outletId;
    return this;
  }

   /**
   * The ID of the outlet in which the count is taking place.
   * @return outletId
  **/
  @ApiModelProperty(required = true, value = "The ID of the outlet in which the count is taking place.")
  public UUID getOutletId() {
    return outletId;
  }

  public void setOutletId(UUID outletId) {
    this.outletId = outletId;
  }

  public InventoryCount dueAt(String dueAt) {
    this.dueAt = dueAt;
    return this;
  }

   /**
   * The date for which the count is scheduled.
   * @return dueAt
  **/
  @ApiModelProperty(value = "The date for which the count is scheduled.")
  public String getDueAt() {
    return dueAt;
  }

  public void setDueAt(String dueAt) {
    this.dueAt = dueAt;
  }

  public InventoryCount showInactive(Boolean showInactive) {
    this.showInactive = showInactive;
    return this;
  }

   /**
   * Indicates whether inactive products should be included in the count.
   * @return showInactive
  **/
  @ApiModelProperty(value = "Indicates whether inactive products should be included in the count.")
  public Boolean isShowInactive() {
    return showInactive;
  }

  public void setShowInactive(Boolean showInactive) {
    this.showInactive = showInactive;
  }

  public InventoryCount name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the inventory count
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name of the inventory count")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InventoryCount status(String status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the inventory count. One of: &#x60;STOCKTAKE_SCHEDULED&#x60;, &#x60;STOCKTAKE_IN_PROGRESS&#x60;, &#x60;STOCKTAKE_IN_PROGRESS_PROCESSED&#x60;, &#x60;STOCKTAKE_COMPLETE&#x60;.
   * @return status
  **/
  @ApiModelProperty(required = true, value = "The status of the inventory count. One of: `STOCKTAKE_SCHEDULED`, `STOCKTAKE_IN_PROGRESS`, `STOCKTAKE_IN_PROGRESS_PROCESSED`, `STOCKTAKE_COMPLETE`.")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public InventoryCount filters(List<InventoryCountFilter> filters) {
    this.filters = filters;
    return this;
  }

  public InventoryCount addFiltersItem(InventoryCountFilter filtersItem) {
    if (this.filters == null) {
      this.filters = new ArrayList<InventoryCountFilter>();
    }
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * An array of filter objects. Max 25.
   * @return filters
  **/
  @ApiModelProperty(value = "An array of filter objects. Max 25.")
  public List<InventoryCountFilter> getFilters() {
    return filters;
  }

  public void setFilters(List<InventoryCountFilter> filters) {
    this.filters = filters;
  }

  public InventoryCount type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Consignment type, for inventory counts always &#x60;STOCKTAKE&#x60;
   * @return type
  **/
  @ApiModelProperty(required = true, value = "Consignment type, for inventory counts always `STOCKTAKE`")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InventoryCount inventoryCount = (InventoryCount) o;
    return Objects.equals(this.outletId, inventoryCount.outletId) &&
        Objects.equals(this.dueAt, inventoryCount.dueAt) &&
        Objects.equals(this.showInactive, inventoryCount.showInactive) &&
        Objects.equals(this.name, inventoryCount.name) &&
        Objects.equals(this.status, inventoryCount.status) &&
        Objects.equals(this.filters, inventoryCount.filters) &&
        Objects.equals(this.type, inventoryCount.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(outletId, dueAt, showInactive, name, status, filters, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InventoryCount {\n");
    
    sb.append("    outletId: ").append(toIndentedString(outletId)).append("\n");
    sb.append("    dueAt: ").append(toIndentedString(dueAt)).append("\n");
    sb.append("    showInactive: ").append(toIndentedString(showInactive)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

