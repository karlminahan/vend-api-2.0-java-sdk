/*
 * API 2.0
 * Early release of version 2.0 of the Vend API.
 *
 * OpenAPI spec version: 2.0
 * Contact: api@vendhq.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.vendhq.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.OffsetDateTime;

/**
 * An object representing a single request and response made to a channel.
 */
@ApiModel(description = "An object representing a single request and response made to a channel.")

public class RequestLog {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("grouping_id")
  private String groupingId = null;

  /**
   * The HTTP method used to make the request.
   */
  public enum RequestMethodEnum {
    GET("GET"),
    
    POST("POST"),
    
    PUT("PUT"),
    
    DELETE("DELETE");

    private String value;

    RequestMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RequestMethodEnum fromValue(String text) {
      for (RequestMethodEnum b : RequestMethodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("request_method")
  private RequestMethodEnum requestMethod = null;

  @JsonProperty("status_code")
  private BigDecimal statusCode = null;

  @JsonProperty("request")
  private String request = null;

  @JsonProperty("response")
  private String response = null;

  @JsonProperty("error")
  private String error = null;

  @JsonProperty("occurred_at")
  private OffsetDateTime occurredAt = null;

  public RequestLog id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Auto-generated object ID.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Auto-generated object ID.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public RequestLog groupingId(String groupingId) {
    this.groupingId = groupingId;
    return this;
  }

   /**
   * An identifier used to group together requests that occurred together as part of the same job or Vend API request.
   * @return groupingId
  **/
  @ApiModelProperty(required = true, value = "An identifier used to group together requests that occurred together as part of the same job or Vend API request.")
  public String getGroupingId() {
    return groupingId;
  }

  public void setGroupingId(String groupingId) {
    this.groupingId = groupingId;
  }

  public RequestLog requestMethod(RequestMethodEnum requestMethod) {
    this.requestMethod = requestMethod;
    return this;
  }

   /**
   * The HTTP method used to make the request.
   * @return requestMethod
  **/
  @ApiModelProperty(required = true, value = "The HTTP method used to make the request.")
  public RequestMethodEnum getRequestMethod() {
    return requestMethod;
  }

  public void setRequestMethod(RequestMethodEnum requestMethod) {
    this.requestMethod = requestMethod;
  }

  public RequestLog statusCode(BigDecimal statusCode) {
    this.statusCode = statusCode;
    return this;
  }

   /**
   * The HTTP status code received in the response.
   * @return statusCode
  **/
  @ApiModelProperty(value = "The HTTP status code received in the response.")
  public BigDecimal getStatusCode() {
    return statusCode;
  }

  public void setStatusCode(BigDecimal statusCode) {
    this.statusCode = statusCode;
  }

  public RequestLog request(String request) {
    this.request = request;
    return this;
  }

   /**
   * A dump of the full request information in HTTP format, including headers and any request body.
   * @return request
  **/
  @ApiModelProperty(required = true, value = "A dump of the full request information in HTTP format, including headers and any request body.")
  public String getRequest() {
    return request;
  }

  public void setRequest(String request) {
    this.request = request;
  }

  public RequestLog response(String response) {
    this.response = response;
    return this;
  }

   /**
   * A dump of the full response information in HTTP format, including headers and any response body.
   * @return response
  **/
  @ApiModelProperty(required = true, value = "A dump of the full response information in HTTP format, including headers and any response body.")
  public String getResponse() {
    return response;
  }

  public void setResponse(String response) {
    this.response = response;
  }

  public RequestLog error(String error) {
    this.error = error;
    return this;
  }

   /**
   * f an error occurred with the request, such as an inability to resolve a hostname, connect or TLS errors, this will be recorded here. Only errors with the ability to make the request are logged here, rather than errors when interpreting a response.
   * @return error
  **/
  @ApiModelProperty(value = "f an error occurred with the request, such as an inability to resolve a hostname, connect or TLS errors, this will be recorded here. Only errors with the ability to make the request are logged here, rather than errors when interpreting a response.")
  public String getError() {
    return error;
  }

  public void setError(String error) {
    this.error = error;
  }

  public RequestLog occurredAt(OffsetDateTime occurredAt) {
    this.occurredAt = occurredAt;
    return this;
  }

   /**
   * An RFC3339 representation of the time at which the request was logged.
   * @return occurredAt
  **/
  @ApiModelProperty(required = true, value = "An RFC3339 representation of the time at which the request was logged.")
  public OffsetDateTime getOccurredAt() {
    return occurredAt;
  }

  public void setOccurredAt(OffsetDateTime occurredAt) {
    this.occurredAt = occurredAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestLog requestLog = (RequestLog) o;
    return Objects.equals(this.id, requestLog.id) &&
        Objects.equals(this.groupingId, requestLog.groupingId) &&
        Objects.equals(this.requestMethod, requestLog.requestMethod) &&
        Objects.equals(this.statusCode, requestLog.statusCode) &&
        Objects.equals(this.request, requestLog.request) &&
        Objects.equals(this.response, requestLog.response) &&
        Objects.equals(this.error, requestLog.error) &&
        Objects.equals(this.occurredAt, requestLog.occurredAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, groupingId, requestMethod, statusCode, request, response, error, occurredAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestLog {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    groupingId: ").append(toIndentedString(groupingId)).append("\n");
    sb.append("    requestMethod: ").append(toIndentedString(requestMethod)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    request: ").append(toIndentedString(request)).append("\n");
    sb.append("    response: ").append(toIndentedString(response)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    occurredAt: ").append(toIndentedString(occurredAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

